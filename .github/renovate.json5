{
  extends: ['config:base'],
  timezone: 'Europe/Zurich',
  schedule: 'after 5pm on the first day of the month',
  labels: ['dependencies'],
  separateMajorMinor: true,
  separateMultipleMajor: true,
  separateMinorPatch: true,
  prHourlyLimit: 0,
  prConcurrentLimit: 0,
  lockFileMaintenance: {
    enabled: true,
    automerge: true,
    schedule: 'after 5pm on the first day of the month',
  },
  semanticCommits: 'disabled',
  baseBranches: ['master', '3.27', '3.28', '3.29', '3.30'],
  'pre-commit': { enabled: true },
  regexManagers: [
    /** Do updates on pre-commit additional dependencies */
    {
      fileMatch: ['^\\.pre\\-commit\\-config\\.yaml$'],
      matchStrings: [" +- '?(?<depName>[^' @=]+)(@|==)(?<currentValue>[^' @=]+)'? # (?<datasource>.+)"],
    },
    {
      fileMatch: ['^build.gradle$', '.*/build.gradle$'],
      matchStrings: ['toolVersion = "(?<currentValue>.*)" // (?<depName>.*)'],
      datasourceTemplate: 'maven',
    },
    /** Do update on the schema present in the ci/config.yaml */
    {
      fileMatch: ['^ci/config\\.yaml$'],
      matchStrings: [
        '.*https://raw\\.githubusercontent\\.com/(?<depName>[^\\s]+)/(?<currentValue>[0-9\\.]+)/.*',
      ],
      datasourceTemplate: 'github-tags',
    },
  ],
  packageRules: [
    /** Docker images versioning */
    {
      matchDatasources: ['docker'],
      versioning: 'loose',
    },
    {
      matchDatasources: ['docker'],
      versioning: 'regex:^(?<major>\\d+)\\.(?<minor>\\d+)(\\.(?<patch>\\d+))?(-(?<compatibility>.*))$',
      matchDepNames: ['gradle', 'tomcat'],
    },
    /** Auto merge the dev dependency update */
    {
      matchDepTypes: ['devDependencies'],
      automerge: true,
    },
    /** Group and auto merge the patch updates */
    {
      matchUpdateTypes: ['patch'],
      groupName: 'all patch versions',
      automerge: true,
    },
    /** Group and auto merge the minor updates */
    {
      matchUpdateTypes: ['minor'],
      groupName: 'all minor versions',
      automerge: true,
    },
    /** Define the groups */
    {
      matchUpdateTypes: ['major'],
      groupName: 'gradle',
      automerge: true,
      matchDepNames: ['gradle'],
    },
    {
      matchDatasources: ['docker'],
      matchUpdateTypes: ['major', 'minor'],
      groupName: 'geoserver',
      automerge: true,
      matchDepNames: ['camptocamp/geoserver'],
    },
    {
      matchPackagePrefixes: ['org.springframework:', 'org.springframework.security:'],
      matchUpdateTypes: ['major'],
      groupName: 'spring',
      automerge: true,
    },
    {
      matchPackagePrefixes: ['net.sf.jasperreports:'],
      matchUpdateTypes: ['major'],
      groupName: 'jasperreports',
      automerge: true,
    },
    {
      matchPackagePrefixes: ['org.slf4j:'],
      matchUpdateTypes: ['major'],
      groupName: 'slf4j',
      automerge: true,
    },
    {
      matchPackagePrefixes: ['io.dropwizard.metrics:'],
      matchUpdateTypes: ['major'],
      groupName: 'metrics',
      automerge: true,
    },
    {
      matchPackagePrefixes: ['org.geotools.', 'org.geotools:'],
      matchUpdateTypes: ['major'],
      groupName: 'geotools',
      automerge: true,
    },
    {
      matchPackagePrefixes: ['ch.qos.logback:'],
      matchUpdateTypes: ['major'],
      groupName: 'logback',
      automerge: true,
    },
    {
      matchPackagePrefixes: ['org.apache.xmlgraphics:batik-'],
      matchUpdateTypes: ['major'],
      groupName: 'batik',
      automerge: true,
    },
    /** Use dependencyDashboardApproval of the SpotBugs and Gradle */
    {
      matchUpdateTypes: ['major', 'minor'],
      dependencyDashboardApproval: true,
      matchDepNames: ['spotbugs', 'gradle'],
    },
    {
      matchPackagePrefixes: ['com.github.spotbugs:spotbugs-'],
      matchUpdateTypes: ['major', 'minor'],
      dependencyDashboardApproval: true,
    },
    /** Group spotbugs */
    {
      matchPackagePrefixes: ['com.github.spotbugs:spotbugs-', 'spotbugs'],
      groupName: 'spotbugs',
    },
    /** Accept only the patch on stabilization branches */
    {
      matchBaseBranches: ['/^[0-9]+\\.[0-9]+$/'],
      matchUpdateTypes: ['major', 'minor', 'pin', 'digest', 'lockFileMaintenance', 'rollback', 'bump'],
      enabled: false,
    },
    /** Support the 4 parts of shellcheck-py version with a v prefix */
    {
      versioning: 'regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)\\.(?<build>\\d+)$',
      matchDepNames: ['shellcheck-py/shellcheck-py'],
    },
    /** Group and auto merge the CI dependencies */
    {
      matchFileNames: ['.github/**', '.pre-commit-config.yaml', 'ci/**'],
      groupName: 'CI dependencies',
      automerge: true,
    },
    /** Packages published very recently are not pushed to stabilization branches for security reasons */
    {
      matchBaseBranches: ['/^[0-9]+\\.[0-9]+$/'],
      minimumReleaseAge: '7 days',
    },
  ],
}
